defaultChannel: alpha
icon:
  base64data: 
  mediatype: image/svg+xml
name: skupper-operator
schema: olm.package
---
entries:
- name: skupper-operator.v0.6.0
- name: skupper-operator.v0.7.0
  replaces: skupper-operator.v0.6.0
- name: skupper-operator.v0.8.0
  replaces: skupper-operator.v0.7.0
- name: skupper-operator.v0.8.1
  replaces: skupper-operator.v0.8.0
- name: skupper-operator.v0.8.7
  replaces: skupper-operator.v0.8.1
- name: skupper-operator.v1.0.0
  replaces: skupper-operator.v0.8.7
- name: skupper-operator.v1.1.1
  replaces: skupper-operator.v1.0.0
- name: skupper-operator.v1.3.0
  replaces: skupper-operator.v1.1.1
- name: skupper-operator.v1.4.0-rc2
  replaces: skupper-operator.v1.3.0
- name: skupper-operator.v1.4.0-rc3
  replaces: skupper-operator.v1.3.0
  skips:
  - skupper-operator.v1.4.0-rc2
- name: skupper-operator.v1.4.1
  replaces: skupper-operator.v1.3.0
  skips:
  - skupper-operator.v1.4.0-rc2
  - skupper-operator.v1.4.0-rc3
- name: skupper-operator.v1.4.2
  replaces: skupper-operator.v1.4.1
- name: skupper-operator.v1.4.3
  replaces: skupper-operator.v1.4.2
- name: skupper-operator.v1.5.0
  replaces: skupper-operator.v1.4.3
- name: skupper-operator.v1.5.1
  replaces: skupper-operator.v1.5.0
- name: skupper-operator.v1.5.2
  replaces: skupper-operator.v1.5.1
- name: skupper-operator.v1.5.3
  replaces: skupper-operator.v1.5.2
- name: skupper-operator.v1.6.0
  replaces: skupper-operator.v1.5.3
- name: skupper-operator.v1.7.0
  replaces: skupper-operator.v1.6.0
- name: skupper-operator.v1.7.1
  replaces: skupper-operator.v1.7.0
name: alpha
package: skupper-operator
schema: olm.channel
---
image: quay.io/skupper/skupper-operator-bundle:v0.6.0
name: skupper-operator.v0.6.0
package: skupper-operator
properties:
- type: olm.package
  value:
    packageName: skupper-operator
    version: 0.6.0
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZUFjY291bnQiLCJtZXRhZGF0YSI6eyJuYW1lIjoic2t1cHBlci1zaXRlLWNvbnRyb2xsZXIifX0=
- type: olm.bundle.object
  value:
    data: 
relatedImages:
- image: quay.io/skupper/site-controller@sha256:b8626e3beda540fd37a6ed523b76b879e1cfc492824223187d2d903c4763afa7
  name: ''
- image: quay.io/skupper/skupper-operator-bundle:v0.6.0
  name: ''
schema: olm.bundle
---
image: quay.io/skupper/skupper-operator-bundle:v0.7.0
name: skupper-operator.v0.7.0
package: skupper-operator
properties:
- type: olm.package
  value:
    packageName: skupper-operator
    version: 0.7.0
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZUFjY291bnQiLCJtZXRhZGF0YSI6eyJuYW1lIjoic2t1cHBlci1zaXRlLWNvbnRyb2xsZXIifX0=
- type: olm.bundle.object
  value:
    data: 
relatedImages:
- image: quay.io/skupper/site-controller@sha256:7ee275cc2abe93bd5c00d4c64998da3c5a369cf27507dc00ef44552b97c68989
  name: ''
- image: quay.io/skupper/skupper-operator-bundle:v0.7.0
  name: ''
schema: olm.bundle
---
image: quay.io/skupper/skupper-operator-bundle:v0.8.0
name: skupper-operator.v0.8.0
package: skupper-operator
properties:
- type: olm.package
  value:
    packageName: skupper-operator
    version: 0.8.0
- type: olm.bundle.object
  value:
    data: 
relatedImages:
- image: quay.io/skupper/site-controller@sha256:e7766f13892892bab3bdba4ef2669b5adcb4cf890223733b9f76dd819099d388
  name: ''
- image: quay.io/skupper/skupper-operator-bundle:v0.8.0
  name: ''
schema: olm.bundle
---
image: quay.io/skupper/skupper-operator-bundle:v0.8.1
name: skupper-operator.v0.8.1
package: skupper-operator
properties:
- type: olm.package
  value:
    packageName: skupper-operator
    version: 0.8.1
- type: olm.bundle.object
  value:
    data: 
relatedImages:
- image: quay.io/skupper/site-controller@sha256:135658b130362d3e4ac8a42dfc486b349efbebe99c6dcca51ab7ba8173585e71
  name: ''
- image: quay.io/skupper/skupper-operator-bundle:v0.8.1
  name: ''
schema: olm.bundle
---
image: quay.io/skupper/skupper-operator-bundle:v0.8.7
name: skupper-operator.v0.8.7
package: skupper-operator
properties:
- type: olm.package
  value:
    packageName: skupper-operator
    version: 0.8.7
- type: olm.bundle.object
  value:
    data: 
relatedImages:
- image: quay.io/skupper/site-controller@sha256:e3bbf1beade924490ebd5ae24e04cf43770fd7ca75256a7736bb570d76daf6e7
  name: ''
- image: quay.io/skupper/skupper-operator-bundle:v0.8.7
  name: ''
schema: olm.bundle
---
image: quay.io/skupper/skupper-operator-bundle:v1.0.0
name: skupper-operator.v1.0.0
package: skupper-operator
properties:
- type: olm.package
  value:
    packageName: skupper-operator
    version: 1.0.0
- type: olm.bundle.object
  value:
    data: 
relatedImages:
- image: quay.io/skupper/site-controller@sha256:90e9a64ac1bab3834e5e7e6861f8c41f9b4a2c90f166cc212e246dc544a709a6
  name: ''
- image: quay.io/skupper/skupper-operator-bundle:v1.0.0
  name: ''
schema: olm.bundle
---
image: quay.io/skupper/skupper-operator-bundle:v1.1.1
name: skupper-operator.v1.1.1
package: skupper-operator
properties:
- type: olm.package
  value:
    packageName: skupper-operator
    version: 1.1.1
- type: olm.bundle.object
  value:
    data: 
relatedImages:
- image: quay.io/skupper/site-controller@sha256:69a0de2e36b23661fff1a490a54113355e531d80ffc9dff6d01252a406d6e302
  name: ''
- image: quay.io/skupper/skupper-operator-bundle:v1.1.1
  name: ''
schema: olm.bundle
---
image: quay.io/skupper/skupper-operator-bundle:v1.3.0
name: skupper-operator.v1.3.0
package: skupper-operator
properties:
- type: olm.package
  value:
    packageName: skupper-operator
    version: 1.3.0
- type: olm.bundle.object
  value:
    data: 
relatedImages:
- image: quay.io/skupper/site-controller@sha256:61b0cf89ad719ce20ba04f1dc32a9391de3998a98202564648eaca760f586136
  name: ''
- image: quay.io/skupper/skupper-operator-bundle:v1.3.0
  name: ''
schema: olm.bundle
---
image: quay.io/skupper/skupper-operator-bundle:v1.4.0-rc2
name: skupper-operator.v1.4.0-rc2
package: skupper-operator
properties:
- type: olm.package
  value:
    packageName: skupper-operator
    version: 1.4.0-rc2
- type: olm.bundle.object
  value:
    data: 
relatedImages:
- image: quay.io/skupper/site-controller@sha256:06e0fd9c2639939a92eac005a3e070087d898cc619e046d3bf9006e5613111f9
  name: ''
- image: quay.io/skupper/skupper-operator-bundle:v1.4.0-rc2
  name: ''
schema: olm.bundle
---
image: quay.io/skupper/skupper-operator-bundle:v1.4.0-rc3
name: skupper-operator.v1.4.0-rc3
package: skupper-operator
properties:
- type: olm.package
  value:
    packageName: skupper-operator
    version: 1.4.0-rc3
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: '[]'
      capabilities: Seamless Upgrades
      categories: Integration & Delivery, Networking, Streaming & Messaging
      certified: 'false'
      containerImage: quay.io/skupper/skupper-operator-bundle:v1.4.0-rc3
      createdAt: '2023-06-13T20:19:21Z'
      description: Skupper Operator provides the ability to create a service network
      operators.operatorframework.io/builder: operator-sdk-v1.4.0+git
      operators.operatorframework.io/project_layout: go.kubebuilder.io/v3
      repository: https://github.com/skupperproject/skupper-operator
      support: Skupper Project
    apiServiceDefinitions: {}
    crdDescriptions: {}
    description: "Skupper enables communication between services running in different\
      \ network locations.\nIt allows geographically distributed services to connect\
      \ as if they were all running in the same site.\n\nEach site is a namespace\
      \ with a running Skupper instance.\n\nThe Skupper operator allows you create\
      \ and manage sites.\nThe operator processes any ConfigMap named skupper-site\
      \ and configures the site for the service network accordingly.\n\nTo get started,\
      \ create the following ConfigMap in the desired namespace, the\nSkupper operator\
      \ will create the Skupper instance and configure the site.\n\n      apiVersion:\
      \ v1\n      kind: ConfigMap\n      metadata:\n        name: skupper-site\n\n\
      The operator can be installed to a single namespace or at cluster level, watching\
      \ for the skupper-site ConfigMap in all namespaces.\n"
    displayName: Skupper
    installModes:
    - supported: true
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - skupper
    - service
    - mesh
    - van
    labels:
      operatorframework.io/arch.amd64: supported
      operatorframework.io/os.linux: supported
    links:
    - name: Skupper Operator
      url: https://github.com/skupperproject/skupper-operator
    maintainers:
    - email: skupper@googlegroups.com
      name: Skupper Community
    maturity: alpha
    provider:
      name: Skupper Project
      url: https://skupper.io
relatedImages:
- image: quay.io/skupper/site-controller@sha256:2221a229f0a02ad74f33424437561c176d78470d02dc2709d27916e0b9133e75
  name: ''
- image: quay.io/skupper/skupper-operator-bundle:v1.4.0-rc3
  name: ''
schema: olm.bundle
---
image: quay.io/skupper/skupper-operator-bundle:v1.4.1
name: skupper-operator.v1.4.1
package: skupper-operator
properties:
- type: olm.package
  value:
    packageName: skupper-operator
    version: 1.4.1
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: '[]'
      capabilities: Seamless Upgrades
      categories: Integration & Delivery, Networking, Streaming & Messaging
      certified: 'false'
      containerImage: quay.io/skupper/skupper-operator-bundle:v1.4.1
      createdAt: '2023-06-21T18:28:43Z'
      description: Skupper Operator provides the ability to create a service network
      operators.operatorframework.io/builder: operator-sdk-v1.4.0+git
      operators.operatorframework.io/project_layout: go.kubebuilder.io/v3
      repository: https://github.com/skupperproject/skupper-operator
      support: Skupper Project
    apiServiceDefinitions: {}
    crdDescriptions: {}
    description: "Skupper enables communication between services running in different\
      \ network locations.\nIt allows geographically distributed services to connect\
      \ as if they were all running in the same site.\n\nEach site is a namespace\
      \ with a running Skupper instance.\n\nThe Skupper operator allows you create\
      \ and manage sites.\nThe operator processes any ConfigMap named skupper-site\
      \ and configures the site for the service network accordingly.\n\nTo get started,\
      \ create the following ConfigMap in the desired namespace, the\nSkupper operator\
      \ will create the Skupper instance and configure the site.\n\n      apiVersion:\
      \ v1\n      kind: ConfigMap\n      metadata:\n        name: skupper-site\n\n\
      The operator can be installed to a single namespace or at cluster level, watching\
      \ for the skupper-site ConfigMap in all namespaces.\n"
    displayName: Skupper
    installModes:
    - supported: true
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - skupper
    - service
    - mesh
    - van
    labels:
      operatorframework.io/arch.amd64: supported
      operatorframework.io/os.linux: supported
    links:
    - name: Skupper Operator
      url: https://github.com/skupperproject/skupper-operator
    maintainers:
    - email: skupper@googlegroups.com
      name: Skupper Community
    maturity: alpha
    provider:
      name: Skupper Project
      url: https://skupper.io
relatedImages:
- image: quay.io/skupper/site-controller@sha256:2ae8c0b3af3b9dd3c80e777c2cec0139f2bef952343c9549505fd63466fc2b92
  name: ''
- image: quay.io/skupper/skupper-operator-bundle:v1.4.1
  name: ''
schema: olm.bundle
---
image: quay.io/skupper/skupper-operator-bundle:v1.4.2
name: skupper-operator.v1.4.2
package: skupper-operator
properties:
- type: olm.package
  value:
    packageName: skupper-operator
    version: 1.4.2
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: '[]'
      capabilities: Seamless Upgrades
      categories: Integration & Delivery, Networking, Streaming & Messaging
      certified: 'false'
      containerImage: quay.io/skupper/skupper-operator-bundle:v1.4.2
      createdAt: '2023-07-24T13:25:17Z'
      description: Skupper Operator provides the ability to create a service network
      operators.operatorframework.io/builder: operator-sdk-v1.4.0+git
      operators.operatorframework.io/project_layout: go.kubebuilder.io/v3
      repository: https://github.com/skupperproject/skupper-operator
      support: Skupper Project
    apiServiceDefinitions: {}
    crdDescriptions: {}
    description: "Skupper enables communication between services running in different\
      \ network locations.\nIt allows geographically distributed services to connect\
      \ as if they were all running in the same site.\n\nEach site is a namespace\
      \ with a running Skupper instance.\n\nThe Skupper operator allows you create\
      \ and manage sites.\nThe operator processes any ConfigMap named skupper-site\
      \ and configures the site for the service network accordingly.\n\nTo get started,\
      \ create the following ConfigMap in the desired namespace, the\nSkupper operator\
      \ will create the Skupper instance and configure the site.\n\n      apiVersion:\
      \ v1\n      kind: ConfigMap\n      metadata:\n        name: skupper-site\n\n\
      The operator can be installed to a single namespace or at cluster level, watching\
      \ for the skupper-site ConfigMap in all namespaces.\n"
    displayName: Skupper
    installModes:
    - supported: true
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - skupper
    - service
    - mesh
    - van
    labels:
      operatorframework.io/arch.amd64: supported
      operatorframework.io/os.linux: supported
    links:
    - name: Skupper Operator
      url: https://github.com/skupperproject/skupper-operator
    maintainers:
    - email: skupper@googlegroups.com
      name: Skupper Community
    maturity: alpha
    provider:
      name: Skupper Project
      url: https://skupper.io
relatedImages:
- image: quay.io/skupper/site-controller@sha256:8b2010400aacd972f2b044ff014c7a4dd19e88d508cd052484432e4796d2d99d
  name: ''
- image: quay.io/skupper/skupper-operator-bundle:v1.4.2
  name: ''
schema: olm.bundle
---
image: quay.io/skupper/skupper-operator-bundle:v1.4.3
name: skupper-operator.v1.4.3
package: skupper-operator
properties:
- type: olm.package
  value:
    packageName: skupper-operator
    version: 1.4.3
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: '[]'
      capabilities: Seamless Upgrades
      categories: Integration & Delivery, Networking, Streaming & Messaging
      certified: 'false'
      containerImage: quay.io/skupper/site-controller@sha256:77388f3353f103ba453f6152ea7c4b24212212a0798dc624cd928d36ba6c75ca
      createdAt: '2023-09-26T15:11:23Z'
      description: Skupper Operator provides the ability to create a service network
      operators.operatorframework.io/builder: operator-sdk-v1.4.0+git
      operators.operatorframework.io/project_layout: go.kubebuilder.io/v3
      repository: https://github.com/skupperproject/skupper-operator
      support: Skupper Project
    apiServiceDefinitions: {}
    crdDescriptions: {}
    description: "Skupper enables communication between services running in different\
      \ network locations.\nIt allows geographically distributed services to connect\
      \ as if they were all running in the same site.\n\nEach site is a namespace\
      \ with a running Skupper instance.\n\nThe Skupper operator allows you create\
      \ and manage sites.\nThe operator processes any ConfigMap named skupper-site\
      \ and configures the site for the service network accordingly.\n\nTo get started,\
      \ create the following ConfigMap in the desired namespace, the\nSkupper operator\
      \ will create the Skupper instance and configure the site.\n\n      apiVersion:\
      \ v1\n      kind: ConfigMap\n      metadata:\n        name: skupper-site\n\n\
      The operator can be installed to a single namespace or at cluster level, watching\
      \ for the skupper-site ConfigMap in all namespaces.\n"
    displayName: Skupper
    installModes:
    - supported: true
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - skupper
    - service
    - mesh
    - van
    labels:
      operatorframework.io/arch.amd64: supported
      operatorframework.io/os.linux: supported
    links:
    - name: Skupper Operator
      url: https://github.com/skupperproject/skupper-operator
    maintainers:
    - email: skupper@googlegroups.com
      name: Skupper Community
    maturity: alpha
    provider:
      name: Skupper Project
      url: https://skupper.io
relatedImages:
- image: quay.io/skupper/site-controller@sha256:77388f3353f103ba453f6152ea7c4b24212212a0798dc624cd928d36ba6c75ca
  name: ''
- image: quay.io/skupper/skupper-operator-bundle:v1.4.3
  name: ''
schema: olm.bundle
---
image: quay.io/skupper/skupper-operator-bundle:v1.5.0
name: skupper-operator.v1.5.0
package: skupper-operator
properties:
- type: olm.package
  value:
    packageName: skupper-operator
    version: 1.5.0
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: '[]'
      capabilities: Seamless Upgrades
      categories: Integration & Delivery, Networking, Streaming & Messaging
      certified: 'false'
      containerImage: quay.io/skupper/site-controller@sha256:ae7145417d85c9e2ab9435178802fe1be98547bb06ec30c55b754988bf798ba0
      createdAt: '2023-11-10T20:15:52Z'
      description: Skupper Operator provides the ability to create a service network
      operators.operatorframework.io/builder: operator-sdk-v1.4.0+git
      operators.operatorframework.io/project_layout: go.kubebuilder.io/v3
      repository: https://github.com/skupperproject/skupper-operator
      support: Skupper Project
    apiServiceDefinitions: {}
    crdDescriptions: {}
    description: "Skupper enables communication between services running in different\
      \ network locations.\nIt allows geographically distributed services to connect\
      \ as if they were all running in the same site.\n\nEach site is a namespace\
      \ with a running Skupper instance.\n\nThe Skupper operator allows you create\
      \ and manage sites.\nThe operator processes any ConfigMap named skupper-site\
      \ and configures the site for the service network accordingly.\n\nTo get started,\
      \ create the following ConfigMap in the desired namespace, the\nSkupper operator\
      \ will create the Skupper instance and configure the site.\n\n      apiVersion:\
      \ v1\n      kind: ConfigMap\n      metadata:\n        name: skupper-site\n\n\
      The operator can be installed to a single namespace or at cluster level, watching\
      \ for the skupper-site ConfigMap in all namespaces.\n"
    displayName: Skupper
    installModes:
    - supported: true
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - skupper
    - service
    - mesh
    - van
    labels:
      operatorframework.io/arch.amd64: supported
      operatorframework.io/os.linux: supported
    links:
    - name: Skupper Operator
      url: https://github.com/skupperproject/skupper-operator
    maintainers:
    - email: skupper@googlegroups.com
      name: Skupper Community
    maturity: alpha
    provider:
      name: Skupper Project
      url: https://skupper.io
relatedImages:
- image: quay.io/skupper/site-controller@sha256:ae7145417d85c9e2ab9435178802fe1be98547bb06ec30c55b754988bf798ba0
  name: ''
- image: quay.io/skupper/skupper-operator-bundle:v1.5.0
  name: ''
schema: olm.bundle
---
image: quay.io/skupper/skupper-operator-bundle:v1.5.1
name: skupper-operator.v1.5.1
package: skupper-operator
properties:
- type: olm.package
  value:
    packageName: skupper-operator
    version: 1.5.1
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: '[]'
      capabilities: Seamless Upgrades
      categories: Integration & Delivery, Networking, Streaming & Messaging
      certified: 'false'
      containerImage: quay.io/skupper/site-controller@sha256:79f70af267c8db0de51469dff74894f785e791a8357a6fd3f52361cf78745f4a
      createdAt: '2023-12-08T19:32:30Z'
      description: Skupper Operator provides the ability to create a service network
      operators.operatorframework.io/builder: operator-sdk-v1.4.0+git
      operators.operatorframework.io/project_layout: go.kubebuilder.io/v3
      repository: https://github.com/skupperproject/skupper-operator
      support: Skupper Project
    apiServiceDefinitions: {}
    crdDescriptions: {}
    description: "Skupper enables communication between services running in different\
      \ network locations.\nIt allows geographically distributed services to connect\
      \ as if they were all running in the same site.\n\nEach site is a namespace\
      \ with a running Skupper instance.\n\nThe Skupper operator allows you create\
      \ and manage sites.\nThe operator processes any ConfigMap named skupper-site\
      \ and configures the site for the service network accordingly.\n\nTo get started,\
      \ create the following ConfigMap in the desired namespace, the\nSkupper operator\
      \ will create the Skupper instance and configure the site.\n\n      apiVersion:\
      \ v1\n      kind: ConfigMap\n      metadata:\n        name: skupper-site\n\n\
      The operator can be installed to a single namespace or at cluster level, watching\
      \ for the skupper-site ConfigMap in all namespaces.\n"
    displayName: Skupper
    installModes:
    - supported: true
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - skupper
    - service
    - mesh
    - van
    labels:
      operatorframework.io/arch.amd64: supported
      operatorframework.io/os.linux: supported
    links:
    - name: Skupper Operator
      url: https://github.com/skupperproject/skupper-operator
    maintainers:
    - email: skupper@googlegroups.com
      name: Skupper Community
    maturity: alpha
    provider:
      name: Skupper Project
      url: https://skupper.io
relatedImages:
- image: quay.io/skupper/site-controller@sha256:79f70af267c8db0de51469dff74894f785e791a8357a6fd3f52361cf78745f4a
  name: ''
- image: quay.io/skupper/skupper-operator-bundle:v1.5.1
  name: ''
schema: olm.bundle
---
image: quay.io/skupper/skupper-operator-bundle:v1.5.2
name: skupper-operator.v1.5.2
package: skupper-operator
properties:
- type: olm.package
  value:
    packageName: skupper-operator
    version: 1.5.2
- type: olm.bundle.object
  value:
    data: 
relatedImages:
- image: quay.io/skupper/site-controller@sha256:e6453fab518537a9852f5752183a6f4f701d4673d8f9d5ee9385fd7871437557
  name: ''
- image: quay.io/skupper/skupper-operator-bundle:v1.5.2
  name: ''
schema: olm.bundle
---
image: quay.io/skupper/skupper-operator-bundle:v1.5.3
name: skupper-operator.v1.5.3
package: skupper-operator
properties:
- type: olm.package
  value:
    packageName: skupper-operator
    version: 1.5.3
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: '[]'
      capabilities: Seamless Upgrades
      categories: Integration & Delivery, Networking, Streaming & Messaging
      certified: 'false'
      containerImage: quay.io/skupper/site-controller@sha256:2d90f1afd494042c4448245f9a46fa983a20cd5e48db7f1bac3e362dc4ac3874
      createdAt: '2024-01-18T20:16:38Z'
      description: Skupper Operator provides the ability to create a service network
      operators.operatorframework.io/builder: operator-sdk-v1.4.0+git
      operators.operatorframework.io/project_layout: go.kubebuilder.io/v3
      repository: https://github.com/skupperproject/skupper-operator
      support: Skupper Project
    apiServiceDefinitions: {}
    crdDescriptions: {}
    description: "Skupper enables communication between services running in different\
      \ network locations.\nIt allows geographically distributed services to connect\
      \ as if they were all running in the same site.\n\nEach site is a namespace\
      \ with a running Skupper instance.\n\nThe Skupper operator allows you create\
      \ and manage sites.\nThe operator processes any ConfigMap named skupper-site\
      \ and configures the site for the service network accordingly.\n\nTo get started,\
      \ create the following ConfigMap in the desired namespace, the\nSkupper operator\
      \ will create the Skupper instance and configure the site.\n\n      apiVersion:\
      \ v1\n      kind: ConfigMap\n      metadata:\n        name: skupper-site\n\n\
      The operator can be installed to a single namespace or at cluster level, watching\
      \ for the skupper-site ConfigMap in all namespaces.\n"
    displayName: Skupper
    installModes:
    - supported: true
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - skupper
    - service
    - mesh
    - van
    labels:
      operatorframework.io/arch.amd64: supported
      operatorframework.io/os.linux: supported
    links:
    - name: Skupper Operator
      url: https://github.com/skupperproject/skupper-operator
    maintainers:
    - email: skupper@googlegroups.com
      name: Skupper Community
    maturity: alpha
    provider:
      name: Skupper Project
      url: https://skupper.io
relatedImages:
- image: quay.io/skupper/site-controller@sha256:2d90f1afd494042c4448245f9a46fa983a20cd5e48db7f1bac3e362dc4ac3874
  name: skupper-site-controller
- image: quay.io/skupper/skupper-operator-bundle:v1.5.3
  name: skupper-operator-bundle
- image: quay.io/skupper/config-sync@sha256:3d2dd21ffb8b1932705d6dfd1fa48662addc4cffc8c68c3bba0d37ececf30516
  name: skupper-config-sync
- image: quay.io/skupper/flow-collector@sha256:9ea5aec7bb5f110d040e2e34d376f33c10b4af11606d3c9349b76f855a78d1c7
  name: skupper-flow-collector
- image: quay.io/skupper/service-controller@sha256:6def6032b819b8cc844c808667d6d349330ed957e3e6b639e86c41de19a6497e
  name: skupper-service-controller
- image: quay.io/skupper/skupper-router@sha256:46a85583554ba0e6d9ae4f03546fefb3166673b40b7bbe0a5fb8cea4f68fad26
  name: skupper-router
- image: quay.io/openshift/origin-oauth-proxy@sha256:a7dff785d821acc4b972d94964947713fade45f007dedb5deee17a2869bf5d24
  name: ose-oauth-proxy
- image: quay.io/prometheus/prometheus@sha256:d2ab0a27783fd4ad96a8853e2847b99a0be0043687b8a5d1ebfb2dd3fa4fd1b8
  name: ose-prometheus
schema: olm.bundle
---
image: quay.io/skupper/skupper-operator-bundle:v1.6.0
name: skupper-operator.v1.6.0
package: skupper-operator
properties:
- type: olm.package
  value:
    packageName: skupper-operator
    version: 1.6.0
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: '[]'
      capabilities: Seamless Upgrades
      categories: Integration & Delivery, Networking, Streaming & Messaging
      certified: 'false'
      containerImage: quay.io/skupper/site-controller@sha256:e5f8b2ddf378cf3e40f4c7b7ec8482eb3321947cd46481c868d727932c449d78
      createdAt: '2024-02-26T18:22:07Z'
      description: Skupper Operator provides the ability to create a service network
      operators.operatorframework.io/builder: operator-sdk-v1.4.0+git
      operators.operatorframework.io/project_layout: go.kubebuilder.io/v3
      repository: https://github.com/skupperproject/skupper-operator
      support: Skupper Project
    apiServiceDefinitions: {}
    crdDescriptions: {}
    description: "Skupper enables communication between services running in different\
      \ network locations.\nIt allows geographically distributed services to connect\
      \ as if they were all running in the same site.\n\nEach site is a namespace\
      \ with a running Skupper instance.\n\nThe Skupper operator allows you create\
      \ and manage sites.\nThe operator processes any ConfigMap named skupper-site\
      \ and configures the site for the service network accordingly.\n\nTo get started,\
      \ create the following ConfigMap in the desired namespace, the\nSkupper operator\
      \ will create the Skupper instance and configure the site.\n\n      apiVersion:\
      \ v1\n      kind: ConfigMap\n      metadata:\n        name: skupper-site\n\n\
      The operator can be installed to a single namespace or at cluster level, watching\
      \ for the skupper-site ConfigMap in all namespaces.\n"
    displayName: Skupper
    installModes:
    - supported: true
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - skupper
    - service
    - mesh
    - van
    labels:
      operatorframework.io/arch.amd64: supported
      operatorframework.io/os.linux: supported
    links:
    - name: Skupper Operator
      url: https://github.com/skupperproject/skupper-operator
    maintainers:
    - email: skupper@googlegroups.com
      name: Skupper Community
    maturity: alpha
    provider:
      name: Skupper Project
      url: https://skupper.io
relatedImages:
- image: quay.io/openshift/origin-oauth-proxy@sha256:a7dff785d821acc4b972d94964947713fade45f007dedb5deee17a2869bf5d24
  name: ose-oauth-proxy
- image: quay.io/prometheus/prometheus@sha256:d2ab0a27783fd4ad96a8853e2847b99a0be0043687b8a5d1ebfb2dd3fa4fd1b8
  name: ose-prometheus
- image: quay.io/skupper/config-sync@sha256:659fe28d1df7c99bba3bb854b1e9991c715ae4de99d91c88d5db5e4f9ef4c852
  name: skupper-config-sync
- image: quay.io/skupper/flow-collector@sha256:3870c5bc89e623b7cebe21856bfefc22de76313705efa0ec551a5963789fff3b
  name: skupper-flow-collector
- image: quay.io/skupper/service-controller@sha256:345edf2d9d72b5a97bcce0e8cea8cda82d120f7bf83756d73f9ac114c2fcced8
  name: skupper-service-controller
- image: quay.io/skupper/site-controller@sha256:e5f8b2ddf378cf3e40f4c7b7ec8482eb3321947cd46481c868d727932c449d78
  name: skupper-site-controller
- image: quay.io/skupper/skupper-operator-bundle:v1.6.0
  name: ''
- image: quay.io/skupper/skupper-router@sha256:bf8d5955ce4e406275a4934278efe51c1af9a1a269a70e8fe642b7d94d80cb81
  name: skupper-router
schema: olm.bundle
---
image: quay.io/skupper/skupper-operator-bundle:v1.7.0
name: skupper-operator.v1.7.0
package: skupper-operator
properties:
- type: olm.package
  value:
    packageName: skupper-operator
    version: 1.7.0
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: '[]'
      capabilities: Seamless Upgrades
      categories: Integration & Delivery, Networking, Streaming & Messaging
      certified: 'false'
      containerImage: quay.io/skupper/site-controller@sha256:f028e86d2d317500afd17ba653ecf06c54fd2aa99709c26f0f8d44db1f9ef8d9
      createdAt: '2024-05-09T13:07:55Z'
      description: Skupper Operator provides the ability to create a service network
      operators.operatorframework.io/builder: operator-sdk-v1.4.0+git
      operators.operatorframework.io/project_layout: go.kubebuilder.io/v3
      repository: https://github.com/skupperproject/skupper-operator
      support: Skupper Project
    apiServiceDefinitions: {}
    crdDescriptions: {}
    description: "Skupper enables communication between services running in different\
      \ network locations.\nIt allows geographically distributed services to connect\
      \ as if they were all running in the same site.\n\nEach site is a namespace\
      \ with a running Skupper instance.\n\nThe Skupper operator allows you create\
      \ and manage sites.\nThe operator processes any ConfigMap named skupper-site\
      \ and configures the site for the service network accordingly.\n\nTo get started,\
      \ create the following ConfigMap in the desired namespace, the\nSkupper operator\
      \ will create the Skupper instance and configure the site.\n\n      apiVersion:\
      \ v1\n      kind: ConfigMap\n      metadata:\n        name: skupper-site\n\n\
      The operator can be installed to a single namespace or at cluster level, watching\
      \ for the skupper-site ConfigMap in all namespaces.\n"
    displayName: Skupper
    installModes:
    - supported: true
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - skupper
    - service
    - mesh
    - van
    labels:
      operatorframework.io/arch.amd64: supported
      operatorframework.io/os.linux: supported
    links:
    - name: Skupper Operator
      url: https://github.com/skupperproject/skupper-operator
    maintainers:
    - email: skupper@googlegroups.com
      name: Skupper Community
    maturity: alpha
    provider:
      name: Skupper Project
      url: https://skupper.io
relatedImages:
- image: quay.io/openshift/origin-oauth-proxy@sha256:a7dff785d821acc4b972d94964947713fade45f007dedb5deee17a2869bf5d24
  name: ose-oauth-proxy
- image: quay.io/prometheus/prometheus@sha256:d2ab0a27783fd4ad96a8853e2847b99a0be0043687b8a5d1ebfb2dd3fa4fd1b8
  name: ose-prometheus
- image: quay.io/skupper/config-sync@sha256:d7f3f918b80c6dffff25b506137b21f112c8529217729c93d08b457218219736
  name: skupper-config-sync
- image: quay.io/skupper/flow-collector@sha256:0c0c58a9105ec09514e55d7e3eada464736cd29dc81a776017f5c1602693b589
  name: skupper-flow-collector
- image: quay.io/skupper/service-controller@sha256:5306d1b2ecbcdec4a13d4968e360cd467f5a9f376a8b93923ef5ef7d271fe009
  name: skupper-service-controller
- image: quay.io/skupper/site-controller@sha256:f028e86d2d317500afd17ba653ecf06c54fd2aa99709c26f0f8d44db1f9ef8d9
  name: skupper-site-controller
- image: quay.io/skupper/skupper-operator-bundle:v1.7.0
  name: ''
- image: quay.io/skupper/skupper-router@sha256:ef575029bbc499f05b1e31f7358234b0c453849ee3a72dd826573573f9c4fee4
  name: skupper-router
schema: olm.bundle
---
image: quay.io/skupper/skupper-operator-bundle:v1.7.1
name: skupper-operator.v1.7.1
package: skupper-operator
properties:
- type: olm.package
  value:
    packageName: skupper-operator
    version: 1.7.1
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: '[]'
      capabilities: Seamless Upgrades
      categories: Integration & Delivery, Networking, Streaming & Messaging
      certified: "false"
      containerImage: quay.io/skupper/site-controller@sha256:4809db7263d77a95797061798e910f1bdbb5d5fe2db2bb3c743b97f5d0c7b3af
      createdAt: "2024-06-12T14:36:59Z"
      description: Skupper Operator provides the ability to create a service network
      operators.operatorframework.io/builder: operator-sdk-v1.4.0+git
      operators.operatorframework.io/project_layout: go.kubebuilder.io/v3
      repository: https://github.com/skupperproject/skupper-operator
      support: Skupper Project
    apiServiceDefinitions: {}
    crdDescriptions: {}
    description: |
      Skupper enables communication between services running in different network locations.
      It allows geographically distributed services to connect as if they were all running in the same site.

      Each site is a namespace with a running Skupper instance.

      The Skupper operator allows you create and manage sites.
      The operator processes any ConfigMap named skupper-site and configures the site for the service network accordingly.

      To get started, create the following ConfigMap in the desired namespace, the
      Skupper operator will create the Skupper instance and configure the site.

            apiVersion: v1
            kind: ConfigMap
            metadata:
              name: skupper-site

      The operator can be installed to a single namespace or at cluster level, watching for the skupper-site ConfigMap in all namespaces.
    displayName: Skupper
    installModes:
    - supported: true
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - skupper
    - service
    - mesh
    - van
    labels:
      operatorframework.io/arch.amd64: supported
      operatorframework.io/os.linux: supported
    links:
    - name: Skupper Operator
      url: https://github.com/skupperproject/skupper-operator
    maintainers:
    - email: skupper@googlegroups.com
      name: Skupper Community
    maturity: alpha
    provider:
      name: Skupper Project
      url: https://skupper.io
relatedImages:
- image: quay.io/openshift/origin-oauth-proxy@sha256:a7dff785d821acc4b972d94964947713fade45f007dedb5deee17a2869bf5d24
  name: ose-oauth-proxy
- image: quay.io/prometheus/prometheus@sha256:d2ab0a27783fd4ad96a8853e2847b99a0be0043687b8a5d1ebfb2dd3fa4fd1b8
  name: ose-prometheus
- image: quay.io/skupper/config-sync@sha256:a884b26a32179af5a2bfa85118bf873852eec6e2930e92da778b57506c0a0880
  name: skupper-config-sync
- image: quay.io/skupper/flow-collector@sha256:bf646b0cb75e1c29bbe0261aa9943e06d33118f5e6a5ccb7503c60c974167692
  name: skupper-flow-collector
- image: quay.io/skupper/service-controller@sha256:624e88e695297df28e485db7e802945ad1978ac6b0c9e9edca8b5e6013af8991
  name: skupper-service-controller
- image: quay.io/skupper/site-controller@sha256:4809db7263d77a95797061798e910f1bdbb5d5fe2db2bb3c743b97f5d0c7b3af
  name: skupper-site-controller
- image: quay.io/skupper/skupper-operator-bundle:v1.7.1
  name: ""
- image: quay.io/skupper/skupper-router@sha256:5eb258a0927e7706e7c035f1def2eb5211c8c33dd371fafa7210517fd894f68b
  name: skupper-router
schema: olm.bundle
